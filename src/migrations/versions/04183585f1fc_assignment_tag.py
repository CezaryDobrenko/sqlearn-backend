"""assignment tag

Revision ID: 04183585f1fc
Revises: 739e42a02c87
Create Date: 2022-11-03 21:20:34.131244

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "04183585f1fc"
down_revision = "739e42a02c87"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "assignment_template_tag",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "modified",
            sa.DateTime(),
            server_default=sa.text("timezone('UTC', now())"),
            nullable=True,
        ),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("timezone('UTC', now())"),
            nullable=True,
        ),
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.Column("assignment_template_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["assignment_template_id"], ["assignment_template.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["tag_id"], ["tag.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_assignment_template_tag_assignment_template_id"),
        "assignment_template_tag",
        ["assignment_template_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_assignment_template_tag_tag_id"),
        "assignment_template_tag",
        ["tag_id"],
        unique=False,
    )
    op.create_table(
        "assignment_tag",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "modified",
            sa.DateTime(),
            server_default=sa.text("timezone('UTC', now())"),
            nullable=True,
        ),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("timezone('UTC', now())"),
            nullable=True,
        ),
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.Column("assignment_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["assignment_id"], ["assignment.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["tag_id"], ["tag.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_assignment_tag_assignment_id"),
        "assignment_tag",
        ["assignment_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_assignment_tag_tag_id"), "assignment_tag", ["tag_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_assignment_tag_tag_id"), table_name="assignment_tag")
    op.drop_index(op.f("ix_assignment_tag_assignment_id"), table_name="assignment_tag")
    op.drop_table("assignment_tag")
    op.drop_index(
        op.f("ix_assignment_template_tag_tag_id"), table_name="assignment_template_tag"
    )
    op.drop_index(
        op.f("ix_assignment_template_tag_assignment_template_id"),
        table_name="assignment_template_tag",
    )
    op.drop_table("assignment_template_tag")
    # ### end Alembic commands ###
