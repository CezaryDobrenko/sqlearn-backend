"""course

Revision ID: 96602f162633
Revises: bcffb9cfb58f
Create Date: 2022-11-03 21:15:05.430631

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "96602f162633"
down_revision = "bcffb9cfb58f"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "course_template",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "modified",
            sa.DateTime(),
            server_default=sa.text("timezone('UTC', now())"),
            nullable=True,
        ),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("timezone('UTC', now())"),
            nullable=True,
        ),
        sa.Column("name", sa.String(length=500), nullable=True),
        sa.Column("description", sa.String(length=2000), nullable=True),
        sa.Column("owner_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["owner_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_course_template_owner_id"),
        "course_template",
        ["owner_id"],
        unique=False,
    )
    op.create_table(
        "course",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "modified",
            sa.DateTime(),
            server_default=sa.text("timezone('UTC', now())"),
            nullable=True,
        ),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("timezone('UTC', now())"),
            nullable=True,
        ),
        sa.Column("name", sa.String(length=500), nullable=True),
        sa.Column("description", sa.String(length=2000), nullable=True),
        sa.Column("is_finished", sa.Boolean(), nullable=True),
        sa.Column("course_template_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["course_template_id"], ["course_template.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_course_course_template_id"),
        "course",
        ["course_template_id"],
        unique=False,
    )
    op.create_index(op.f("ix_course_user_id"), "course", ["user_id"], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_course_user_id"), table_name="course")
    op.drop_index(op.f("ix_course_course_template_id"), table_name="course")
    op.drop_table("course")
    op.drop_index(op.f("ix_course_template_owner_id"), table_name="course_template")
    op.drop_table("course_template")
    # ### end Alembic commands ###
