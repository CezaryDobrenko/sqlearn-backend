"""database_preset

Revision ID: fa19e641570c
Revises: 36eec4f6174e
Create Date: 2022-11-12 23:33:17.228194

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "fa19e641570c"
down_revision = "36eec4f6174e"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "database",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "modified",
            sa.DateTime(),
            server_default=sa.text("timezone('UTC', now())"),
            nullable=True,
        ),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("timezone('UTC', now())"),
            nullable=True,
        ),
        sa.Column("name", sa.String(length=500), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_database_user_id"), "database", ["user_id"], unique=False)
    op.create_table(
        "table",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "modified",
            sa.DateTime(),
            server_default=sa.text("timezone('UTC', now())"),
            nullable=True,
        ),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("timezone('UTC', now())"),
            nullable=True,
        ),
        sa.Column("name", sa.String(length=500), nullable=True),
        sa.Column("description", sa.String(length=2000), nullable=True),
        sa.Column("database_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["database_id"], ["database.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_table_database_id"), "table", ["database_id"], unique=False
    )
    op.create_table(
        "table_column",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "modified",
            sa.DateTime(),
            server_default=sa.text("timezone('UTC', now())"),
            nullable=True,
        ),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("timezone('UTC', now())"),
            nullable=True,
        ),
        sa.Column("name", sa.String(length=500), nullable=True),
        sa.Column(
            "type",
            sa.Enum("INTEGER", "NUMERIC", "REAL", "TEXT", "BLOB", name="columntype"),
            nullable=False,
        ),
        sa.Column("length", sa.Integer(), nullable=True),
        sa.Column("is_null", sa.Boolean(), nullable=True),
        sa.Column("table_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["table_id"], ["table.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_table_column_table_id"), "table_column", ["table_id"], unique=False
    )
    op.create_table(
        "table_relation",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "modified",
            sa.DateTime(),
            server_default=sa.text("timezone('UTC', now())"),
            nullable=True,
        ),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("timezone('UTC', now())"),
            nullable=True,
        ),
        sa.Column("name", sa.String(length=500), nullable=True),
        sa.Column(
            "action",
            sa.Enum(
                "NO_ACTION", "SET_NULL", "SET_DEFAULT", "CASCADE", name="relationaction"
            ),
            nullable=False,
        ),
        sa.Column("relation_column_name", sa.String(length=500), nullable=True),
        sa.Column("relation_table_id", sa.Integer(), nullable=True),
        sa.Column("table_column_name", sa.String(length=500), nullable=True),
        sa.Column("table_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["relation_table_id"], ["table.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["table_id"], ["table.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_table_relation_relation_table_id"),
        "table_relation",
        ["relation_table_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_table_relation_table_id"), "table_relation", ["table_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_table_relation_table_id"), table_name="table_relation")
    op.drop_index(
        op.f("ix_table_relation_relation_table_id"), table_name="table_relation"
    )
    op.drop_table("table_relation")
    op.drop_index(op.f("ix_table_column_table_id"), table_name="table_column")
    op.drop_table("table_column")
    op.drop_index(op.f("ix_table_database_id"), table_name="table")
    op.drop_table("table")
    op.drop_index(op.f("ix_database_user_id"), table_name="database")
    op.drop_table("database")
    # ### end Alembic commands ###
